name: CI/CD

on:
  push:
    branches: [ main, dev, staging ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, dev, staging ]

permissions:
  pull-requests: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    - name: Run tests
      run: |
        cd todo_project
        pytest tests/

  sast:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
    - uses: actions/checkout@v2
    - name: Perform Bandit Analysis
      uses: PyCQA/bandit-action@v1
      with:
        project_path: 'todo_project'
        output_format: 'html'
        output_path: 'bandit_results.html'
    - name: Upload Bandit results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: Bandit Security Scan Results
        path: bandit_results.html

  open-pr-to-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' && success()
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "dev"
          destination_branch: "staging"
          pr_title: "Merge dev into staging"
          pr_body: "Automated PR to merge dev into staging after successful build and tests."
          github_token: ${{ secrets.GITHUB_TOKEN }}

  deploy-dev:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
    - uses: actions/checkout@v2
    - name: Deploy to development
      run: |
        echo "Deploy to development environment"

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    steps:
    - uses: actions/checkout@v2
    - name: Deploy to staging
      run: |
        echo "Deploy to staging environment"
        # Add your staging deployment steps here

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
    - name: Deploy to production
      run: |
        echo "Deploy to production environment"